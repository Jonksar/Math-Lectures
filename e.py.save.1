from math import factorial, sqrt, e, exp, ln

# e through limit definition
def limit_e(n):
	return (1+1/n)**n

# Taylor series for e^x.
def e_taylor(n, x):
	summa = 0
	for i in range (n+1):
		summa += 1/factorial(i)
	return summa

# http://www.regentsprep.org/regents/math/algtrig/atp8b/examplesexponentialfunction.htm 

#  A certain strain of bacteria that is growing on your kitchen counter doubles every 5 minutes.
#  Assuming that you start with only one bacterium,
#  how many bacteria could be present at the end of 96 minutes?

# find k - y = y_0*e^(kt)
#
# 2 = 1 * exp(5*k)
# ln 2 = 5k * ln(e)
# k = ln 2 / 5 = 0.138629

# Now using this k value we solve the initial problem.
# y = y_0*exp(0.138629*t)
# y = 1 * exp(0.1368629*96)
# y = 602.2487625

def practice_problem(ttd, init_pop, time):
	# ttd - time to double, init_pop - initial population, time - find population at this time
	# finding k
	k = ln(2) / ttd
	# find solution
	return init_pop*exp(k * time)

print(e_taylor(100, 1))
print(limit_e(1000))
print(practice_problem(1, 100, 1, 10000))
